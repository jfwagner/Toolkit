//******************************************
// IP1 & 5 AT COLLISION WITH HL-LHC VALUES
//******************************************
option, warn, info; 

//-----------------------------------------
// Shortcut creation for needed directories
//-----------------------------------------
system, "ln -fns /afs/cern.ch/eng/lhc/optics/V6.503 db5";                    // Nominal
system, "ln -fns /afs/cern.ch/eng/lhc/optics/HLLHCV1.1 slhc";                // High Luminosity
system, "ln -fns /afs/cern.ch/user/a/ansantam/public/toolkit tkit";          // Beam parameters
system, "ln -fns /afs/cern.ch/user/a/ansantam/public/MADX/collimation coll"; // Collimation

//---------------------------------
// Load ATS macros and select beam
//--------------------------------- 
call, file = "slhc/toolkit/macro.madx";
// on_disp = 1;  // parasitic dispersion
mylhcbeam = 1;
// mylhcbeam = 4; // For Beam 4, in the other sense

//--------------
// Verbose off
//--------------
option, -echo, -warn, -info;

//---------------------------------
// Redefinition of elements' length
//---------------------------------
REAL CONST l.TAN   = 3.7;
REAL CONST l.TANAL = l.TAN;
REAL CONST l.TANAR = l.TAN;
REAL CONST l.TANC  = l.TAN;
REAL CONST l.TCT   = 1.0;
REAL CONST l.TCTH  = l.TCT;
REAL CONST l.TCTVA = l.TCT;

//--------------------------------------------
// Load sequence files (position of elements)
//--------------------------------------------
if (mylhcbeam>2){
  call,file="slhc/hllhc_thinb4.seq";
} else {
  call,file="slhc/hllhc_thin.seq";
};

//--------------------
// Load strength files
//--------------------
call, file = "slhc/opt_round_thin.madx";  // beta*=15 cm, round optics
//call, file = "slhc/opt_round.madx";  // beta*=15 cm, round optics

//------------------------------
// Load and define the aperture
//-----------------------------
call, file = "db5/aperture/aperture.b1.madx";
call, file = "db5/aperture/aperture.b2.madx";
call, file = "db5/aperture/aper_tol.b1.madx";
call, file = "db5/aperture/aper_tol.b2.madx";
call, file = "slhc/aperture/aperture_upgrade_MS.madx";
call, file = "slhc/aperture/aperture_upgrade_IT.madx";

// Not updated -- !Check where we can get the info?
//------------------------------------------------
call, file = "db5/aperture/as-built/layoutapertures.madx";            // Vacuum markers
call, file = "db5/aperture/as-built/exp_pipe_model_after_LS1.madx";   // Apertures around IPs
call, file = "db5/aperture/as-built/exp_pipe_install_after_LS1.madx"; // Apertures around IPs

//--------------------------------
// Define the beam for the machine
//--------------------------------
exec, crossing_enable;
exec, mk_beam(7000); // Collision

//--------------------------------
// Define the crossings at the IPS
//--------------------------------
on_x1 := 1; on_sep1 := 0; on_sol_atlas := 1;
on_x2 := 1; on_sep2 := 0; on_alice:= 1; on_sol_alice := 1;
on_x5 := 1; on_sep5 := 0; on_sol_cms := 1;
on_x8 := 1; on_sep8 := 0; on_lhcb:= 1;
on_disp := 1;

//------------------------
// Activate crab cavities
//------------------------
on_crab1 := 1; on_crab5 := 1; z_crab := 0.075;

//------------------------------------------------------
// Load the beam parameters (to obtain sigmas as output)
//------------------------------------------------------
call, file = "tkit/Beam_7_TeV.madx";  // Important to call these files first, if not Beam.madx doesnt work
// call, file = "tkit/Beam_450_GeV.madx";
call, file = "tkit/Beam.madx";   

system, "cp slhc/aperture/offset.ip*b*.tfs ."; 

//---------------------------------------------------------------------------------------------------
// IP1
//---------------------------------------------------------------------------------------------------
//-------
// Beam 1
//-------
use, sequence = lhcb1;
select, flag = twiss, clear;
select, flag = twiss,
column = name, s, l, x, y, aper_1, aper_2, aper_3, aper_4, alfx, alfy, px, py, sigxd, sigyd, betx, bety, sigx, ex, sigy, ey, dx, dpx, dy, dpy, wx, wy, T, PT, DELTAP, beta;
twiss, table = twiss, file = "twiss_ip1_b1.tfs";

// select, flag = aperture, clear;
// select, flag = aperture, column = name, s, l, aper_1, aper_2, aper_3, aper_4, apertype, xtol, ytol, rtol, n1;
// aperture, offsetelem = "./offset.ip1.b1.tfs", file = "aperture_ip1_b1.tfs";

select, flag = aperture, clear;
select, flag = aperture, column = keyword, name, parent, s, l, aper_1, aper_2, aper_3, aper_4;
aperture, file = "allapert_twiss.b1";

//------------------------------------------------
// Generate fort.2 lattice with crabs for SixTrack
//------------------------------------------------
if (NRJ < 4999.9999) {VRF400 := 8. ; LAGRF400.B1 = 0.5; LAGRF400.B2 = 0.;};
if (NRJ > 5000.0000) {VRF400 := 16.; LAGRF400.B1 = 0.5; LAGRF400.B2 = 0.;};

twiss;
emit;
 value, table(summ,q1);
 value, table(summ,q2);
 value, table(summ,dq1);
 value, table(summ,dq2);
 sixtrack, cavall, radius = 0.017;

//-------------------------------
// Print the crab cavity voltage
//-------------------------------
exec, print_vcrab;

//-------
// Beam 2
//-------
use, sequence = lhcb2;
select, flag = twiss, clear;
select, flag = twiss,
column = name, s, l, x, y, aper_1, aper_2, aper_3, aper_4, alfx, alfy, px, py, sigxd, sigyd, betx, bety, sigx, ex, sigy, ey, dx, dpx, dy, dpy, wx, wy, T, PT, DELTAP, beta;
twiss, table = twiss, file = "twiss_ip1_b2.tfs";

//--------------
// Survey file
//--------------
if (mylhcbeam<=2){
  exec,check_ip(b1); survey,file="survey_ip1_b1.tfs";
  exec,check_ip(b2); survey,file="survey_ip1_b2.tfs";
} else {
  exec,check_ip(b2); survey,file="survey_ip1_b4.tfs";
};

//---------------------------------------------------------------------------------------------------
// IP5
//---------------------------------------------------------------------------------------------------
//-------
// Beam 1
//-------
seqedit, sequence = lhcb1; flatten; cycle, start = IP5; endedit;
use, sequence = lhcb1;
select, flag = twiss,clear;
select, flag = twiss,
column = name, s, l, x, y, aper_1, aper_2, aper_3, aper_4, alfx, alfy, px, py, sigxd, sigyd, betx, bety, sigx, ex, sigy, ey, dx, dpx, dy, dpy, wx, wy, T, PT, DELTAP, beta;
twiss, table = twiss, file = "twiss_ip5_b1.tfs";

//-------
// Beam 2
//-------
seqedit, sequence = lhcb2; flatten; cycle, start = IP5; endedit;
use, sequence = lhcb2;
select, flag = twiss,clear;
select, flag = twiss,
column = name, s, l, x, y, aper_1, aper_2, aper_3, aper_4, alfx, alfy, px, py, sigxd, sigyd, betx, bety, sigx, ex, sigy, ey, dx, dpx, dy, dpy, wx, wy, T, PT, DELTAP, beta;
twiss, table = twiss, file = "twiss_ip5_b2.tfs";

//--------------
// Survey file
//--------------
if (mylhcbeam<=2){
  exec,check_ip(b1); survey,file="survey_ip5_b1.tfs";
  exec,check_ip(b2); survey,file="survey_ip5_b2.tfs";
} else {
  exec,check_ip(b2); survey,file="survey_ip5_b4.tfs";
};

stop;




